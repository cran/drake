% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprecated.R
\name{map_plan}
\alias{map_plan}
\title{Create a plan that maps a function to a grid of arguments.
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}}
\usage{
map_plan(args, fun, id = "id", character_only = FALSE, trace = FALSE)
}
\arguments{
\item{args}{A data frame (or better yet, a \code{tibble})
of function arguments to \code{fun}.
Here, the column names should be the names of the arguments
of \code{fun}, and each row of \code{args} corresponds to a
call to \code{fun}.}

\item{fun}{Name of a function to apply the arguments
row-by-row. Supply a symbol if \code{character_only} is
\code{FALSE} and a character scalar otherwise.}

\item{id}{Name of an optional column in \code{args}
giving the names of the targets. If not supplied,
target names will be generated automatically.
\code{id} should be a symbol if \code{character_only} is \code{FALSE}
and a character scalar otherwise.}

\item{character_only}{Logical, whether to interpret
the \code{fun} and \code{id} arguments as character scalars or symbols.}

\item{trace}{Logical, whether to append the columns of \code{args}
to the output workflow plan data frame. The added columns
help "trace back" the original settings that went into building
each target. Similar to the \code{trace} argument of \code{\link[=drake_plan]{drake_plan()}}.}
}
\value{
A workflow plan data frame.
}
\description{
Deprecated on 2019-05-16. Use \code{\link[=drake_plan]{drake_plan()}}
transformations instead. See
\url{https://books.ropensci.org/drake/plans.html#large-plans}
for the details.
}
\details{
\code{map_plan()} is like \code{base::Map()}:
it takes a function name and a grid of arguments, and
writes out all the commands calls to apply the function to
each row of arguments.
}
\seealso{
\code{\link[=drake_plan]{drake_plan()}}
}
\keyword{internal}
